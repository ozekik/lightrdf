# Derived from https://github.com/mre/hyperjson/blob/master/.github/workflows/ci.yml
name: CI

on:
  release:
    types: [created]
  push:

jobs:
  # https://srz-zumix.blogspot.com/2019/10/github-actions-ci-skip.html
  prepare:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "[skip ci] ${{ contains(github.event.head_commit.message, '[skip ci]') }}"

  lint:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      # - name: Lint with clippy
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: --all-targets --all-features

      # - name: Test with cargo
      #   uses: actions-rs/cargo@v1.0.1
      #   with:
      #     command: test
      #     toolchain: nightly

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          pip install poetry
          poetry install

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Python package
        run: poetry run maturin develop --release

      - name: pytest
        run: poetry run tox

  # python-publish:
  #   needs: build
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.7, 3.8]
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   steps:
  #     - uses: actions/checkout@v1

  #     - uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install latest nightly
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true

  #     - name: Install dependencies
  #       run: |
  #         python -m venv .venv
  #         pip install poetry
  #         poetry install

      - name: Build Python package
        run: poetry run maturin build --release --strip --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if: matrix.os != 'windows-latest'
        run: find ./target/wheels/

      # Note: Windows doesn't support glob
      # https://stackoverflow.com/a/52481267/270334
      - name: Install wheels
        if: matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels lightrdf

      - name: Install wheels
        if: matrix.os != 'windows-latest'
        run: pip install target/wheels/lightrdf*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/lightrdf*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: poetry run maturin publish --username __token__ --interpreter python${{matrix.python_version}}
